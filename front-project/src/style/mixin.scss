$themes:(
    dark:(
        color:white,
        background-color:#242424,
        border-color:#ccc,
        box-shadow:0px 2px 7px 0px #3e3d3d,
    ),
    light:(
        color:#333,
        background-color:white,
        border-color:#ccc,
        box-shadow:0px 2px 7px 0px #aaa9a9,
    )
);

@mixin change-back-transition {
    transition: background .3s,width .3s cubic-bezier(.2,0,0,1) 0s;
}
@mixin themeify {
    @each $themeKey,$themeValue in $themes {
        $themeValue:$themeValue !global;//提升全局变量
        [data-theme="#{$themeKey}"] &{
            @content;
        }
    }
}
@function themed($key){
    @return map-get($map: $themeValue, $key: $key)
};
// 获取主题属性,参数name需要与css属性对应,可传入单个值或数组
@mixin theme_property($name) {
    @if type-of($name)!='list' {
        @include themeify{
            #{$name}: themed(#{$name});
        }
    }@else{
        @each $key in $name {
            @include themeify(){
                #{$key}:themed(#{$key})
            }
        }
    }
}

// flex混入，默认靠左，居中
@mixin flex($justify:flex-start,$align:center) {
    display: flex;
    justify-content: $justify;
    align-items: $align;
}

// 混入过渡,默认颜色
@mixin transition($key:color,$time:0.3s) {
    transition: $key $time;
}

@mixin hover($color:var(--ant-primary-color-hover)) {
    color: $color;
    cursor: pointer;
}
